// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Otiport.API.Data;

namespace Otiport.API.Migrations
{
    [DbContext(typeof(OtiportDbContext))]
    [Migration("20181011215748_treatment profile item")]
    partial class treatmentprofileitem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Otiport.API.Data.Entities.Patient.PatientEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("District");

                    b.Property<string>("EyeColor");

                    b.Property<byte>("Gender");

                    b.Property<string>("HairColor");

                    b.Property<int>("Height");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("ProfilePictureUrl");

                    b.Property<string>("Surname");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("UserId");

                    b.Property<Guid?>("UserId1");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("UserId1");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Otiport.API.Data.Entities.ProfileItem.ProfileItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Title");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("ProfileItems");
                });

            modelBuilder.Entity("Otiport.API.Data.Entities.ProfileItem.ProfileItemToPatientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("PatientId");

                    b.Property<Guid?>("PatientId1");

                    b.Property<int>("ProfileItemId");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("PatientId1");

                    b.HasIndex("ProfileItemId");

                    b.ToTable("ProfileItemsToPatients");
                });

            modelBuilder.Entity("Otiport.API.Data.Entities.Treatment.TreatmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Title");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("Otiport.API.Data.Entities.Treatment.TreatmentToPatientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("PatientId");

                    b.Property<Guid?>("PatientId1");

                    b.Property<int?>("ProfileItemId");

                    b.Property<int>("TreatmentId");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("PatientId1");

                    b.HasIndex("ProfileItemId");

                    b.ToTable("ThreatmentToPatients");
                });

            modelBuilder.Entity("Otiport.API.Data.Entities.Users.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("District");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Password");

                    b.Property<string>("ProfilePictureUrl");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("UserGroupId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("UserGroupId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Otiport.API.Data.Entities.Users.UserGroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("Otiport.API.Data.Entities.Patient.PatientEntity", b =>
                {
                    b.HasOne("Otiport.API.Data.Entities.Users.UserEntity", "User")
                        .WithMany("Patients")
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("Otiport.API.Data.Entities.ProfileItem.ProfileItemToPatientEntity", b =>
                {
                    b.HasOne("Otiport.API.Data.Entities.Patient.PatientEntity", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId1");

                    b.HasOne("Otiport.API.Data.Entities.ProfileItem.ProfileItemEntity", "ProfileItem")
                        .WithMany()
                        .HasForeignKey("ProfileItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Otiport.API.Data.Entities.Treatment.TreatmentToPatientEntity", b =>
                {
                    b.HasOne("Otiport.API.Data.Entities.Patient.PatientEntity", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId1");

                    b.HasOne("Otiport.API.Data.Entities.Treatment.TreatmentEntity", "ProfileItem")
                        .WithMany()
                        .HasForeignKey("ProfileItemId");
                });

            modelBuilder.Entity("Otiport.API.Data.Entities.Users.UserEntity", b =>
                {
                    b.HasOne("Otiport.API.Data.Entities.Users.UserGroupEntity", "UserGroup")
                        .WithMany("Users")
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
